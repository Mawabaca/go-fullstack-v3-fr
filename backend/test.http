// Variables
@baseURL = http://localhost:3000

# @baseURL = https://mon-vieux-grimoire.onrender.com/api

#@JWT = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MjVhOWRmMmMzNmUwZTdhMzc3ZWU3YTAiLCJpYXQiOjE2NTI3MzY1MzYsImV4cCI6MTY1MjgyMjkzNn0.ZLjJqhzoVajQHvZ6lhmUlE0XEga9caa9ISzWdl136Q0

@JWT = {{login.response.body.token}} # token

@bookId = 63de696ec35f68b6422d4f2f

// Signup -> create user
# @name signup
POST {{baseURL}}/auth/signup HTTP/1.1
Content-Type: application/json

# {
#     "email": "toto@gmail.com",
#     "password": "MotDePasse"
# }

# {
#     "email": "titi@gmail.com",
#     "password": "MotDePasse"
# }

# {
#     "email": "tata@gmail.com",
#     "password": "MotDePasse"
# }

{
    "email": "tati@gmail.com",
    "password": "MotDePasse"
}

###

// signin -> login and receive token if OK
# @name login
POST {{baseURL}}/auth/login HTTP/1.1
Content-Type: application/json

# {
#     "email": "toto@gmail.com",
#     "password": "MotDePasse"
# }

# {
#     "email": "titi@gmail.com",
#     "password": "MotDePasse"
# }

# {
#     "email": "tata@gmail.com",
#     "password": "MotDePasse"
# }

{
    "email": "tati@gmail.com",
    "password": "MotDePasse"
}

###

// Get  all books
# @name all
GET  {{baseURL}}/books HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{JWT}}

###

# @name test
GET {{baseURL}}/api/stuff HTTP/1.1
Content-Type: application/json

###

// Get  one book
# @name one
GET  {{baseURL}}/books/{{bookId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{JWT}}

###

// Get  best rating
# @name bestrating
GET  {{baseURL}}/books/bestrating HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{JWT}}

###

// Create  book
# @name create
POST {{baseURL}}/books HTTP/1.1
Accept: application/json
Content-Type: multipart/form-data; boundary=MyBoundary
Authorization: Bearer {{JWT}}

--MyBoundary
Content-Disposition: form-data; name="image"; filename="piments-soft.jpeg"
Content-Type: image/jpeg

< ./piments-soft.jpeg

--MyBoundary
Content-Disposition: form-data; name="book"

{
  //"userId": "624c7e7a833f3d1ea9249389",
  "title": "Book de test render new img",
  "author": "Toto",
  "genre": "Éducatif"
}

--MyBoundary--

###

// Modify book with new image
# @name modify-img
PUT {{baseURL}}/books/{{bookId}} HTTP/1.1
Accept: application/json
Content-Type: multipart/form-data; boundary=MyBoundary
Authorization: Bearer {{JWT}}

--MyBoundary
Content-Disposition: form-data; name="image"; filename="picture-1.jpeg"
Content-Type: image/jpeg

< ./picture-1.jpeg

--MyBoundary
Content-Disposition: form-data; name="book"

{
  //"userId": "624c7e7a833f3d1ea9249389",
  "title": "Book de test modifié",
  "author": "Toto",
  "genre": "Éducatif"
}

--MyBoundary--

###

// Modify book without image
# @name modify-no-img
PUT {{baseURL}}/books/{{bookId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{JWT}}

{
  "title": "Book de test titi",
  "author": "Toto",
  "genre": "Éducatif"
}

###

// Delete book
# @name delete
DELETE {{baseURL}}/books/{{bookId}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{JWT}}

###

// Book rating
# @name rating
POST {{baseURL}}/books/{{bookId}}/rating HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{JWT}}

{
  // "userId": "62d7e672fc859b0387f43226",
  "rating": 4
}

###
